# to be sourced

is_master() {
  local opts="-U vcap"
  if [[ -n "${1:-}" ]]; then
    opts="$opts -h $1"
  fi
  if [[ -n "${2:-}" ]]; then
    opts="$opts -p $2"
  else
    opts="$opts -p <%= p('postgres.config')["port"] || 6432 %>"
  fi

  # psql can experience transient issues (like connection reset)
  # make is_master more resilient against these kinds of errors
  error_count=0
  while (( $error_count < 9 )) ; do
    tf=$(echo $(psql $opts postgres -t -c 'SELECT pg_is_in_recovery()' 2>&1));
    
    if [[ "$tf" == "f" ]]; then
      return 0
    elif [[ "$tf" == "t" || "$tf" =~ (could not connect to server)|(starting up) ]]; then
      return 1
    else
      echo "[monitor] received unexpected response from postgres DB while checking master/replica status:"
      echo "[monitor] $tf"
      ((error_count++))
      echo "[monitor] will attempt to check master/replica status again (check $error_count of 9)"
      sleep 1
      continue
    fi
  done
  # we errored out 9 times, return that other node is not master
  echo "[monitor] couldn't determine who was master or replica due to postgres errors. assuming i'm master."
  return 1 
}